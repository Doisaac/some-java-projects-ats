/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package casiobydouglas.casiochronometer;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author MrDoisaac
 */
public class CasioChronometer extends javax.swing.JFrame {
    
    //// TIME VARIABLES///////////////////////////////////////////
    private Timer timer;
    private int hundredthsOfASecond = 0, seconds = 0, minutes = 0, hours = 0;
    
    
    //// Action that happens any 10 milliseconds (0.01 seconds)
    private ActionListener actions = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            hundredthsOfASecond++;
            
            // 100 milliseconds -> 0.01 hundredth of a second 
            if (hundredthsOfASecond == 100){
                seconds++;
                hundredthsOfASecond = 0;
            }
            
            if (seconds == 60){
                minutes++;
                seconds = 0;
            }
            
            if(minutes == 60){
                hours++;
                minutes = 0;
            }
            
            updateTimeLabel();
            
        }
    };
    
    /**
     * Update the time label using the time variables created above
     */
    private void updateTimeLabel() {
        String timeRunning = (hours<=9? "0": "") + hours + ":" + (minutes<=9? "0":"") + minutes + ":"+ (seconds<=9? "0":"") + seconds + ":" + (hundredthsOfASecond<=9? "0":"") + hundredthsOfASecond; 
        timeLabel.setText(timeRunning);
    }
    
    /**
     * Creates new form CasioChronometer
     */
    public CasioChronometer() {
        initComponents();
        setLocationRelativeTo(null);
        timer = new Timer(10, actions);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chronometer");
        setResizable(false);

        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        timeLabel.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 29)); // NOI18N
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("00:00:00:00");
        panel.add(timeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 170, 80));

        startButton.setBackground(new java.awt.Color(102, 102, 102));
        startButton.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        startButton.setForeground(new java.awt.Color(0, 0, 0));
        startButton.setText("START");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        panel.add(startButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        pauseButton.setBackground(new java.awt.Color(102, 102, 102));
        pauseButton.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        pauseButton.setForeground(new java.awt.Color(0, 0, 0));
        pauseButton.setText("PAUSE");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });
        panel.add(pauseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        stopButton.setBackground(new java.awt.Color(102, 102, 102));
        stopButton.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        stopButton.setForeground(new java.awt.Color(0, 0, 0));
        stopButton.setText("STOP");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });
        panel.add(stopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, -1, -1));

        wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/casio.png"))); // NOI18N
        panel.add(wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(panel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        timer.start();
        // one time the button is started the button will be not enable
        startButton.setEnabled(false);
        // once clicked the text changes too
        startButton.setText("RENEW");
        
        // pause and stop still being enable
        pauseButton.setEnabled(true);
        stopButton.setEnabled(true);
    }//GEN-LAST:event_startButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        // once clicked the time stop
        timer.stop();

        // start button becomes enable
        startButton.setEnabled(true);

        pauseButton.setEnabled(false);

    }//GEN-LAST:event_pauseButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // once clicked it has to validate if the chronometer is pause
        if (timer.isRunning()){
            timer.stop();
            startButton.setEnabled(true);
        }

        startButton.setText("START");
        pauseButton.setEnabled(false);
        stopButton.setEnabled(false);

        // resets all the time variables
        hours = 0;
        minutes = 0;
        seconds = 0;
        hundredthsOfASecond = 0;

        // The time label becomes true
        updateTimeLabel();

    }//GEN-LAST:event_stopButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CasioChronometer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CasioChronometer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CasioChronometer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CasioChronometer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new CasioChronometer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel wallpaper;
    // End of variables declaration//GEN-END:variables
}
