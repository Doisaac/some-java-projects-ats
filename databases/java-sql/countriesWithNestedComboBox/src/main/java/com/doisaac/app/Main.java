package com.doisaac.app;

import com.doisaac.model.Country;
import com.doisaac.model.DatabaseConnection;
import com.doisaac.model.State;
import com.doisaac.model.TouristPlace;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        initComboBoxes();
    }

    public void initComboBoxes() {
        Country country = new Country();
        DefaultComboBoxModel comboModel = new DefaultComboBoxModel(country.showCountries());
        cbCountries.setModel(comboModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lCountry = new javax.swing.JLabel();
        cbCountries = new javax.swing.JComboBox<>();
        lState = new javax.swing.JLabel();
        cbStates = new javax.swing.JComboBox<>();
        lTouristPlaces = new javax.swing.JLabel();
        cbTouristPlaces = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        taInfo = new javax.swing.JTextArea();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        lCountry.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lCountry.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lCountry.setText("Country");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lCountry, gridBagConstraints);

        cbCountries.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbCountries.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCountriesItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(cbCountries, gridBagConstraints);

        lState.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lState.setText("State");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lState, gridBagConstraints);

        cbStates.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbStates.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbStatesItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(cbStates, gridBagConstraints);

        lTouristPlaces.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lTouristPlaces.setText("Tourist Place");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lTouristPlaces, gridBagConstraints);

        cbTouristPlaces.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbTouristPlaces.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTouristPlacesItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(cbTouristPlaces, gridBagConstraints);

        taInfo.setColumns(20);
        taInfo.setRows(5);
        jScrollPane1.setViewportView(taInfo);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * When a country is selected
     *
     * @param evt
     */
    private void cbCountriesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCountriesItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            Country country = (Country) cbCountries.getSelectedItem();

            State state = new State();
            DefaultComboBoxModel comboModel = new DefaultComboBoxModel(state.showStates(country.getIdCountry()));
            cbStates.setModel(comboModel);

            cbTouristPlaces.removeAllItems();
            taInfo.setText(null);
        }

    }//GEN-LAST:event_cbCountriesItemStateChanged

    private void cbStatesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbStatesItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED)
        {

            TouristPlace place = new TouristPlace();

            State state = (State) cbStates.getSelectedItem();
            DefaultComboBoxModel comboModel = new DefaultComboBoxModel(place.showPlaces(state.getIdState()));
            cbTouristPlaces.setModel(comboModel);
            taInfo.setText(null);
        }

    }//GEN-LAST:event_cbStatesItemStateChanged

    private void cbTouristPlacesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTouristPlacesItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            Country country = (Country) cbCountries.getSelectedItem();
            State state = (State) cbStates.getSelectedItem();
            TouristPlace place = (TouristPlace) cbTouristPlaces.getSelectedItem();

            taInfo.setText(
                    "Country: " + country.getName() +
                    "\nState: " + state.getName() +
                    "\nPlace: " + place.getName()
            );
            
            taInfo.setEditable(false);
        }
    }//GEN-LAST:event_cbTouristPlacesItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCountries;
    private javax.swing.JComboBox<String> cbStates;
    private javax.swing.JComboBox<String> cbTouristPlaces;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lCountry;
    private javax.swing.JLabel lState;
    private javax.swing.JLabel lTouristPlaces;
    private javax.swing.JTextArea taInfo;
    // End of variables declaration//GEN-END:variables
}
